swagger: "2.0"
info:
  description: Starbucks API
  version: "1.0.0"
  title: Starbucks API Example
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by the server application
paths:
  /coffee:
    get:
      operationId: "coffee.read"
      tags:
        - "Coffee"
      summary: "The coffee data structure for our server application"
      description: "Read the list of coffee drinks"
      responses:
        200:
          description: "Successful read coffee list operation"
          schema:
            type: "array"
            items:
              properties:
                coffee_name:
                  type: "string"
                milk:
                  type: "string"
                timestamp:
                  type: "string"

# STUDENT DO Create a get route that accepts a parameter to return one drink
# SOLUTION
  /coffee/{coffee_name}:
    get:
      operationId: "coffee.read_one"
      tags:
        - "Coffee"
      summary: "Read one drink from the coffee object"
      description: "Read one drink from the coffee object"
      parameters:
        - name: coffee_name
          in: path
          description: "Name of coffee get from the list"
          type: "string"
          required: True
      responses:
        200:
          description: Successfully read coffee from coffee list
          schema:
            properties:
              coffee_name:
                type: "string"
              milk:
                type: "string"
              timestamp:
                type: "string"
